
import { Question } from '../types';

export const questions: Question[] = [
  // JavaScript - Fresher
  {
    id: 1,
    question: "What is the difference between 'let', 'const', and 'var' in JavaScript?",
    domain: "JavaScript",
    level: "fresher",
    correctAnswer: "var is function-scoped and can be redeclared, let is block-scoped and can be reassigned, const is block-scoped and cannot be reassigned",
    points: 5,
  },
  {
    id: 2,
    question: "Explain what is hoisting in JavaScript?",
    domain: "JavaScript",
    level: "fresher",
    correctAnswer: "Hoisting is JavaScript's behavior of moving variable and function declarations to the top of their scope during compilation",
    points: 5,
  },
  {
    id: 3,
    question: "What are closures in JavaScript?",
    domain: "JavaScript",
    level: "fresher",
    correctAnswer: "A closure is a function that has access to variables in its outer scope even after the outer function has returned",
    points: 6,
  },
  {
    id: 21,
    question: "What is the difference between == and === in JavaScript?",
    domain: "JavaScript",
    level: "fresher",
    correctAnswer: "== performs type coercion and compares values, while === compares both value and type without coercion",
    points: 5,
  },
  {
    id: 22,
    question: "What are JavaScript data types?",
    domain: "JavaScript",
    level: "fresher",
    correctAnswer: "JavaScript has primitive types: string, number, boolean, undefined, null, symbol, bigint and non-primitive: object",
    points: 5,
  },
  {
    id: 23,
    question: "What is the difference between null and undefined?",
    domain: "JavaScript",
    level: "fresher",
    correctAnswer: "undefined means a variable has been declared but not assigned a value, null is an intentional absence of value",
    points: 5,
  },
  {
    id: 24,
    question: "What are arrow functions in JavaScript?",
    domain: "JavaScript",
    level: "fresher",
    correctAnswer: "Arrow functions are a shorter way to write functions using => syntax, they don't have their own 'this' binding",
    points: 6,
  },
  {
    id: 25,
    question: "What is the purpose of the 'this' keyword in JavaScript?",
    domain: "JavaScript",
    level: "fresher",
    correctAnswer: "'this' refers to the object that is currently executing the function, its value depends on how the function is called",
    points: 6,
  },

  // JavaScript - Experienced
  {
    id: 4,
    question: "Explain the event loop in JavaScript and how it handles asynchronous operations?",
    domain: "JavaScript",
    level: "experienced",
    correctAnswer: "The event loop is a mechanism that handles asynchronous operations by managing the call stack, callback queue, and microtask queue, ensuring non-blocking execution",
    points: 10,
  },
  {
    id: 5,
    question: "What is the difference between Promise.all() and Promise.allSettled()?",
    domain: "JavaScript",
    level: "experienced",
    correctAnswer: "Promise.all() fails fast if any promise rejects, while Promise.allSettled() waits for all promises to settle and returns results for all",
    points: 8,
  },
  {
    id: 26,
    question: "Explain prototypal inheritance in JavaScript?",
    domain: "JavaScript",
    level: "experienced",
    correctAnswer: "Prototypal inheritance allows objects to inherit properties and methods from other objects through the prototype chain",
    points: 9,
  },
  {
    id: 27,
    question: "What are generators in JavaScript and how do they work?",
    domain: "JavaScript",
    level: "experienced",
    correctAnswer: "Generators are functions that can be paused and resumed, they use function* syntax and yield keyword to produce values on demand",
    points: 10,
  },
  {
    id: 28,
    question: "Explain the concept of currying in JavaScript?",
    domain: "JavaScript",
    level: "experienced",
    correctAnswer: "Currying is a technique of transforming a function with multiple arguments into a sequence of functions each taking a single argument",
    points: 8,
  },
  {
    id: 29,
    question: "What is the difference between call, apply, and bind methods?",
    domain: "JavaScript",
    level: "experienced",
    correctAnswer: "call invokes function with specified 'this' and arguments, apply is similar but takes array of arguments, bind returns new function with bound 'this'",
    points: 9,
  },

  // React - Fresher
  {
    id: 6,
    question: "What is JSX in React?",
    domain: "React",
    level: "fresher",
    correctAnswer: "JSX is a syntax extension for JavaScript that allows writing HTML-like syntax in React components",
    points: 5,
  },
  {
    id: 7,
    question: "What is the difference between state and props in React?",
    domain: "React",
    level: "fresher",
    correctAnswer: "State is internal component data that can change, while props are external data passed from parent components and are read-only",
    points: 6,
  },
  {
    id: 8,
    question: "What are React Hooks?",
    domain: "React",
    level: "fresher",
    correctAnswer: "Hooks are functions that allow functional components to use state and lifecycle methods previously only available in class components",
    points: 6,
  },
  {
    id: 30,
    question: "What is the useState hook and how do you use it?",
    domain: "React",
    level: "fresher",
    correctAnswer: "useState is a hook that adds state to functional components, it returns an array with current state value and a setter function",
    points: 6,
  },
  {
    id: 31,
    question: "What is the useEffect hook used for?",
    domain: "React",
    level: "fresher",
    correctAnswer: "useEffect is used for side effects in functional components, like data fetching, subscriptions, or manually changing the DOM",
    points: 6,
  },
  {
    id: 32,
    question: "What is conditional rendering in React?",
    domain: "React",
    level: "fresher",
    correctAnswer: "Conditional rendering is the ability to render different content based on certain conditions using if statements, ternary operators, or logical operators",
    points: 5,
  },
  {
    id: 33,
    question: "How do you handle events in React?",
    domain: "React",
    level: "fresher",
    correctAnswer: "Events in React are handled using event handlers like onClick, onChange, etc., which are passed as props to elements",
    points: 5,
  },
  {
    id: 34,
    question: "What are controlled components in React?",
    domain: "React",
    level: "fresher",
    correctAnswer: "Controlled components are form elements whose value is controlled by React state, making React the single source of truth",
    points: 6,
  },

  // React - Experienced
  {
    id: 9,
    question: "Explain the concept of React reconciliation and the virtual DOM?",
    domain: "React",
    level: "experienced",
    correctAnswer: "Reconciliation is React's process of comparing virtual DOM trees to efficiently update the real DOM by identifying minimal changes needed",
    points: 10,
  },
  {
    id: 10,
    question: "What are higher-order components (HOCs) and when would you use them?",
    domain: "React",
    level: "experienced",
    correctAnswer: "HOCs are functions that take a component and return a new component with additional props or behavior, used for code reuse and cross-cutting concerns",
    points: 9,
  },
  {
    id: 35,
    question: "What is React Context and when should you use it?",
    domain: "React",
    level: "experienced",
    correctAnswer: "React Context provides a way to pass data through component tree without prop drilling, used for global state like themes, authentication",
    points: 9,
  },
  {
    id: 36,
    question: "Explain React's component lifecycle methods?",
    domain: "React",
    level: "experienced",
    correctAnswer: "Lifecycle methods include mounting (componentDidMount), updating (componentDidUpdate), and unmounting (componentWillUnmount) phases",
    points: 8,
  },
  {
    id: 37,
    question: "What is the difference between useMemo and useCallback?",
    domain: "React",
    level: "experienced",
    correctAnswer: "useMemo memoizes computed values to avoid expensive calculations, useCallback memoizes functions to prevent unnecessary re-renders",
    points: 9,
  },
  {
    id: 38,
    question: "What are render props in React?",
    domain: "React",
    level: "experienced",
    correctAnswer: "Render props is a pattern where a component receives a function as a prop that returns React elements, enabling code sharing",
    points: 8,
  },

  // Python - Fresher
  {
    id: 11,
    question: "What is the difference between list and tuple in Python?",
    domain: "Python",
    level: "fresher",
    correctAnswer: "Lists are mutable and use square brackets, while tuples are immutable and use parentheses",
    points: 5,
  },
  {
    id: 12,
    question: "Explain what is list comprehension in Python?",
    domain: "Python",
    level: "fresher",
    correctAnswer: "List comprehension is a concise way to create lists using a single line of code with optional conditions",
    points: 6,
  },
  {
    id: 39,
    question: "What are Python dictionaries and how do you use them?",
    domain: "Python",
    level: "fresher",
    correctAnswer: "Dictionaries are unordered collections of key-value pairs, accessed using keys in square brackets or get() method",
    points: 5,
  },
  {
    id: 40,
    question: "What is the difference between '==' and 'is' in Python?",
    domain: "Python",
    level: "fresher",
    correctAnswer: "'==' compares values for equality, while 'is' compares object identity (whether they are the same object in memory)",
    points: 6,
  },
  {
    id: 41,
    question: "What are Python functions and how do you define them?",
    domain: "Python",
    level: "fresher",
    correctAnswer: "Functions are reusable blocks of code defined using 'def' keyword, they can accept parameters and return values",
    points: 5,
  },
  {
    id: 42,
    question: "What is exception handling in Python?",
    domain: "Python",
    level: "fresher",
    correctAnswer: "Exception handling uses try-except blocks to catch and handle errors gracefully without crashing the program",
    points: 6,
  },
  {
    id: 43,
    question: "What are Python modules and packages?",
    domain: "Python",
    level: "fresher",
    correctAnswer: "Modules are single Python files containing code, packages are directories containing multiple modules with __init__.py file",
    points: 6,
  },
  {
    id: 44,
    question: "What is the difference between local and global variables?",
    domain: "Python",
    level: "fresher",
    correctAnswer: "Local variables are defined inside functions and have local scope, global variables are defined outside functions and have global scope",
    points: 5,
  },

  // Python - Experienced
  {
    id: 13,
    question: "Explain the Global Interpreter Lock (GIL) in Python?",
    domain: "Python",
    level: "experienced",
    correctAnswer: "GIL is a mutex that prevents multiple threads from executing Python bytecodes simultaneously, limiting true parallelism in CPU-bound tasks",
    points: 10,
  },
  {
    id: 14,
    question: "What are decorators in Python and how do they work?",
    domain: "Python",
    level: "experienced",
    correctAnswer: "Decorators are functions that modify or extend the behavior of other functions without changing their code, using the @ syntax",
    points: 8,
  },
  {
    id: 45,
    question: "What are generators and iterators in Python?",
    domain: "Python",
    level: "experienced",
    correctAnswer: "Iterators are objects that implement __iter__ and __next__ methods, generators are functions that yield values and maintain state",
    points: 9,
  },
  {
    id: 46,
    question: "Explain metaclasses in Python?",
    domain: "Python",
    level: "experienced",
    correctAnswer: "Metaclasses are classes whose instances are classes themselves, they control how classes are created and behave",
    points: 10,
  },
  {
    id: 47,
    question: "What is the difference between shallow and deep copy?",
    domain: "Python",
    level: "experienced",
    correctAnswer: "Shallow copy creates new object but references to nested objects, deep copy creates completely independent copy of object and all nested objects",
    points: 8,
  },
  {
    id: 48,
    question: "What are context managers in Python?",
    domain: "Python",
    level: "experienced",
    correctAnswer: "Context managers handle resource management using with statement, implementing __enter__ and __exit__ methods for setup and cleanup",
    points: 9,
  },

  // Database - Fresher
  {
    id: 15,
    question: "What is the difference between SQL and NoSQL databases?",
    domain: "Database",
    level: "fresher",
    correctAnswer: "SQL databases are relational with structured schemas and ACID properties, while NoSQL databases are non-relational with flexible schemas and horizontal scaling",
    points: 6,
  },
  {
    id: 16,
    question: "What is a primary key in a database?",
    domain: "Database",
    level: "fresher",
    correctAnswer: "A primary key is a unique identifier for each record in a table that cannot be null and ensures entity integrity",
    points: 5,
  },
  {
    id: 49,
    question: "What is a foreign key and how is it used?",
    domain: "Database",
    level: "fresher",
    correctAnswer: "A foreign key is a field that links to the primary key of another table, used to establish and enforce relationships between tables",
    points: 6,
  },
  {
    id: 50,
    question: "What are the basic SQL commands?",
    domain: "Database",
    level: "fresher",
    correctAnswer: "Basic SQL commands include SELECT (query), INSERT (add), UPDATE (modify), DELETE (remove), CREATE (table/database), DROP (remove table/database)",
    points: 5,
  },
  {
    id: 51,
    question: "What is the difference between INNER JOIN and LEFT JOIN?",
    domain: "Database",
    level: "fresher",
    correctAnswer: "INNER JOIN returns only matching records from both tables, LEFT JOIN returns all records from left table and matching records from right table",
    points: 6,
  },
  {
    id: 52,
    question: "What is a database schema?",
    domain: "Database",
    level: "fresher",
    correctAnswer: "A database schema is the structure that defines how data is organized, including tables, fields, relationships, and constraints",
    points: 5,
  },
  {
    id: 53,
    question: "What are the ACID properties in databases?",
    domain: "Database",
    level: "fresher",
    correctAnswer: "ACID stands for Atomicity (all or nothing), Consistency (valid state), Isolation (concurrent transactions), Durability (permanent changes)",
    points: 7,
  },
  {
    id: 54,
    question: "What is the difference between DELETE and TRUNCATE?",
    domain: "Database",
    level: "fresher",
    correctAnswer: "DELETE removes specific rows and can be rolled back, TRUNCATE removes all rows, is faster, and cannot be rolled back",
    points: 6,
  },

  // Database - Experienced
  {
    id: 17,
    question: "Explain database normalization and its different forms?",
    domain: "Database",
    level: "experienced",
    correctAnswer: "Normalization reduces data redundancy through forms (1NF, 2NF, 3NF, BCNF) by organizing data into related tables with minimal duplication",
    points: 10,
  },
  {
    id: 18,
    question: "What is database indexing and how does it improve performance?",
    domain: "Database",
    level: "experienced",
    correctAnswer: "Indexing creates data structures that improve query performance by providing faster data retrieval paths, trading storage space for speed",
    points: 9,
  },
  {
    id: 55,
    question: "What are database transactions and how do they work?",
    domain: "Database",
    level: "experienced",
    correctAnswer: "Transactions are sequences of operations that are treated as a single unit, ensuring ACID properties through commit and rollback mechanisms",
    points: 9,
  },
  {
    id: 56,
    question: "Explain the concept of database sharding?",
    domain: "Database",
    level: "experienced",
    correctAnswer: "Sharding is horizontal partitioning of data across multiple databases to improve performance and scalability by distributing load",
    points: 10,
  },
  {
    id: 57,
    question: "What are stored procedures and their advantages?",
    domain: "Database",
    level: "experienced",
    correctAnswer: "Stored procedures are precompiled SQL code stored in database, offering better performance, security, and code reusability",
    points: 8,
  },
  {
    id: 58,
    question: "What is database replication and its types?",
    domain: "Database",
    level: "experienced",
    correctAnswer: "Database replication copies data across multiple servers for availability and performance, types include master-slave, master-master, and snapshot replication",
    points: 9,
  },

  // System Design - Experienced
  {
    id: 19,
    question: "How would you design a URL shortening service like bit.ly?",
    domain: "System Design",
    level: "experienced",
    correctAnswer: "Use base62 encoding for short URLs, hash table for mapping, load balancers, caching layer, and database sharding for scalability",
    points: 15,
  },
  {
    id: 20,
    question: "Explain the CAP theorem and its implications for distributed systems?",
    domain: "System Design",
    level: "experienced",
    correctAnswer: "CAP theorem states that distributed systems can only guarantee two of: Consistency, Availability, and Partition tolerance, requiring trade-offs",
    points: 12,
  },
  {
    id: 59,
    question: "How would you design a chat application like WhatsApp?",
    domain: "System Design",
    level: "experienced",
    correctAnswer: "Use WebSocket connections, message queues, database partitioning, CDN for media files, push notifications, and end-to-end encryption",
    points: 15,
  },
  {
    id: 60,
    question: "What is load balancing and what are its types?",
    domain: "System Design",
    level: "experienced",
    correctAnswer: "Load balancing distributes traffic across servers, types include round-robin, least connections, IP hash, and geographic load balancing",
    points: 10,
  },
  {
    id: 61,
    question: "Explain microservices architecture and its benefits?",
    domain: "System Design",
    level: "experienced",
    correctAnswer: "Microservices break applications into small, independent services that can be developed, deployed, and scaled independently, improving flexibility",
    points: 12,
  },
  {
    id: 62,
    question: "How would you design a social media feed like Twitter?",
    domain: "System Design",
    level: "experienced",
    correctAnswer: "Use fan-out strategies, timeline generation, caching, database sharding, content delivery networks, and real-time updates",
    points: 15,
  },
  {
    id: 63,
    question: "What is eventual consistency in distributed systems?",
    domain: "System Design",
    level: "experienced",
    correctAnswer: "Eventual consistency guarantees that if no new updates are made, all replicas will eventually converge to the same state",
    points: 10,
  },
  {
    id: 64,
    question: "How would you design a file storage system like Dropbox?",
    domain: "System Design",
    level: "experienced",
    correctAnswer: "Use chunking, deduplication, metadata storage, conflict resolution, sync algorithms, and distributed file storage",
    points: 15,
  },
];

export const domains = ["JavaScript", "React", "Python", "Database", "System Design"];
export const levels = ["fresher", "experienced"] as const;
